#load in the libraries
library(dplyr)
library(data.table)
library(Metrics)

#do an lm model based off of these features
start <- lm(SalePrice ~ Qual + Cond + YearBuilt + GrLivArea + LotArea + YrSold + BedroomAbvGr + TotRmsAbvGrd + Heating + BldgType + CentralAir + FullBath + HalfBath + TotalBsmtSF + PoolArea, data = train)
saveRDS(start,"./House_Project/volume/models/lm_model")

#uncomment to print the stats
#summary(start)

#predict the new tables based off of the lm model and the train and test data
predSalePrice <- predict(start, newdata = train)
new <- data.table(predSalePrice)
SalePrice <- predict(start, newdata = test)
ans <- data.table(SalePrice)

#add in the Ids to each table
ans$Id <- test$Id
new$Id <- train$Id

#compare actual sale price to the predicted sale price. Check the correlation and rmse score.
new$actual <- train$SalePrice
#uncomment to reveal the training data stats from using the prediction model
#print(cor(new$actual, new$predSalePrice))
#print(rmse(new$actual, new$predSalePrice))

#sorting test ids and relocating sale price to fit the submission (i ended up doing it this way and it worked)
string <- substr(ans$Id, 6, 20)
string1 <- as.numeric(string)
ans$num <- string1
ans <- ans %>% arrange(num)
ans <- subset(ans, select = -num)

#saleprice appearing before id, so move itto after
ans <- ans %>% relocate('SalePrice', .after = 'Id')

#change it into a csv file to submit
fwrite(ans, "./House_Project/volume/data/processed/ans1.csv")
